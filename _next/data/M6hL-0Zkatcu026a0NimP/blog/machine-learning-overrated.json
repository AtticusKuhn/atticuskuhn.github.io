{"pageProps":{"blog":{"content":"\nIn recent years, we've seen a lot of hype around machine learning. From [alpha go](https://deepmind.com/research/case-studies/alphago-the-story-so-far), which beat world-champion go\nplayers, to [GPT-3](https://en.wikipedia.org/wiki/GPT-3), the constant news buzz\nwould make one think we are around the corner from [AI Dominance](https://en.wikipedia.org/wiki/Technological_singularity). But I claim today that most of AI is just hype, with no\nreal substance behind it. Of course time will tell the true use of AI. In fact, most\ntimes teams eagerly throw a [neural net](https://en.wikipedia.org/wiki/Neural_network) at\na problem, they are really looking for a symbolic manipulation tool like [prolog](https://en.wikipedia.org/wiki/Prolog).\n\n# Black Boxes\n\nThe first drawback of machine learning is they are incomprehensible. If a machine learning model\nmakes a mistake, how will you figure out what went wrong? There is no real way of knowing. Sure,\nyou can look at the internal state of the model, but what does that really tell you?\nModels today are getting so large that it is impossible to hold a single one in your\nbrain. GPT-3 has [175 billion parameters](https://www.springboard.com/blog/data-science/machine-learning-gpt-3-open-ai/#:~:text=The%20largest%20version%20GPT%2D3,and%203.2%20M%20batch%20size.&text=Shown%20in%20the%20figure%20above,that%20it%20is%20quite%20larger.)\nparameters. What if it makes a mistake? Will some engineer have to go through all\n175 billion parameters just to find it? I think the true solution is [declarative](https://en.wikipedia.org/wiki/Declarative_programming) software\nthat simply states rules or definitions. That code is easier to debug and understand for\nnew users. In essence, we can only look at machine learning as a black box.\n\n# Changing Requirements\n\nOften in software engineering, projects are subject to [changing requirements](https://rebelsguidetopm.com/help-the-requirements-keep-changing-and-i-cant-nail-them-down-part-2/).\nWhat happens when this is done to a machine learning model? In short, I don't\nsee how a machine learning model trained for one task can be fixed to work on\na slightly different task. It would require a whole new retraining of the model\nevery time you want to make a change. Google even spoke about this issue in their\npaper [Machine Learning:\nThe High-Interest Credit Card of Technical Debt](https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43146.pdf). In our ever-changing world, you must truly\nconsider if you want to use a technology that requires so much effort even to change\nits purpose slightly.\n\n# Declarative Programming: is it Nirvana?\n\nI am a huge fan of declarative programming, whether from the [Wolfram Language](https://en.wikipedia.org/wiki/Wolfram_Language) or from [Prolog](https://en.wikipedia.org/wiki/Prolog).\nIn such a style, the programmer simply states the rules of the system formally, and\nthe language takes care of implementation concerns. This approach is easy to understand\nbecause it is just the rules of the system. In addition, it is easy to understand\nthe behavoir of a program: just follow which rules it applied.  If you have never\nheard of prolog, I strongly encourage you to check it out. It is unlike any other\nprogramming language, not part of the C or ALGOL lineage. It will rethink the way\nthat you understand the purpose of computers, [so try it out](https://swish.swi-prolog.org/).","date":"January 27, 2022","tags":["machine learning"," ml"," AI"],"title":"Machine Learning is overrated","slug":"machine-learning-overrated","description":"I don't understand the hype around machine learning","image":"/images/Blog-Images-Forget-Machine-Learning-Humans-Still-Have-a-Lot-to-Learn-Part-II.jpg"},"reccomendedBlog":[{"content":"\n\n# My Site\nAs I have created a personal site (you're looking at it right now), I feel somewhat\nqualified to give advice to others on the best way of creating a personal site. Of course,\nif you are not impressed by my personal site, feel free not to take my advice.\n\n\nSpecifically, I think I will not give the standard or obvious advice, but rather\nI will give the advice that some people need to hear, but would rather not.\n\n# Fast and Functional\n\nThis might be a personal gripe of mine, but I would caution against using website creators\nsuch as Wix or Wordpress. They just create bloat on a site that really doesn't need it.\nWhen I go to such sites, it takes forever to load because of all the javascript bundles and\ntrackers. Really, if you can be served by plain HTML, then use plain HTML. It will give\nyour users better performance and the site will load almost instantaneously. And this\nsame advice even goes for frameworks. Do you really need your technology stack\nturning into a 100 layer wedding cake just for a personal site? Many people use their\npersonal website as an excuse to try out the latest technology. I know elm/svelte/tailwind/\nwhatever might be hot right now, but sometimes the safest option is best.\n\n# Prioritze Ease-of-Use over Flashy Animations\n\nI see some portfolio websites that look like they were created as a challenge\nto use every single animation avaible in CSS. But really, all animations do is\nslow down the user. If I have to wait 300ms for this flashy animation to complete,\nthen I feel like my flow has been interrupted on this site. I want the technology\nto get in my way as little as possible. Sure, some people take animations\nas an opportunity to show off, but if you must, put the animation in a place\nwhere it doesn't interrupt the flow of the site. Also, keep the animations small\nand less that 200ms. That way, your users will not be foaming at the mouth in\nrage at this mound of useless animations.\n\n# Create Lots of Content\n\nThis advice might seem obvious, but I think it merits repeating. Creating a wealth of\ncontent has a two-fold benefit\n\n* As you write more, you will become better at writing\n\n* By writing more, you will appear higher in search engines as more people click on\nyour site.\n\nHonestly, this is why I think starting a blog is a good idea for most personal sites. \nOf course the market is over-saturated (anyone is capable of starting a blog),\nyet you can always distinguish yourself by putting in extra efforts such as writing\nlong articles\n\n\n# Takeaway\n\nI hope I have given some unconventional advice on how to start a personal site. If\nyou want to hear more about this topic, feel free to [contact me](/contact).","date":"April 7, 2022","tags":["personal site"," html"," react"," blog"," markdown blog"],"title":"Tips for Creating a Personal Site","slug":"create-personal-site","description":"If you are thinking about creating a personal site, I have advice","image":"/images/personal-identity.jpg"},{"content":"\n\n# Linux\n\nI recently began to experiment with trying Linux, a free and open source operating system. I am a supporter\nof open-source software because I believe that it gives us true control over what we do on our electronic\ndevices. \n\n# Nixos\n\nFor my first foray into the wild world of Linux, I decided to try Nixos because I think the philosophy\nof everything being in 1 config file is pretty interesting. \n\n\n# My Experience\n\nFor the first few days, I couldn't get the X11 server to start and I was stuck in the TTY. I eventually\nfigured out that it was an issue with Intel Graphics, so I fixed it.\n\nMy experience was a bit slow and clunky starting out, but eventually, I became faster after I'd learning\nall the tricks of the new software. I actually think I am faster and more efficient now because open-source\nsoftware tends to follow the Unix Philosophy of being modular and also has lots of modes and keybindings\nto speed things up. \n\n# Software I've used\n\nThe thing I like most about free software is that it seems such software gives ultimate control and\ncustomizability to the user. Here are the software packages that I am using right now, which I believe\ngrant the user ultimate control\n\n* Nixos\n* Emacs\n* Xmonad / Xmobar\n\nI'm looking for a new terminal to use. Right now I'm using Xterm, which isn't very good. If you have any\nrecommendations of terminals that I should try, you can contact me.\n\n\n# My Configuration\n\nIf you want to see what configuration and dotfiles I'm using, go to my github because I have posted\nmy dotfiles and configuration files there. \n\n","date":"January 1, 2023","tags":["linux"," computers"," free software"],"title":"My experience using Linux","slug":"linux","description":"I recently switched to using only Linux. See how it turned out!","image":"/images/nixos.jpg"},{"content":"\nI have written this blog post to commemorate how my site has started today. I am especially excited as to how it turned out and I always wanted to make a personal site for myself to display my projects. I built this site using next JS and posting it on GitHub pages.I hope you take the time to look at my blog posts and projects which are on this site \n","date":"April 5, 2021","tags":["blog"," javascript"," github"],"title":"The Start of My Blog","slug":"start","description":"my first blog","image":"/images/start.jpg"}]},"__N_SSG":true}